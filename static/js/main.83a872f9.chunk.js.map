{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Container/Container.module.css","components/Notification/Notification.module.css","components/Container/Container.js","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","components/App.js","index.js"],"names":["module","exports","Container","children","className","styles","container","Section","title","section","FeedbackOptions","options","onLeaveFeedback","optionList","map","option","optionItem","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","notification","App","INITIAL_STATE","POSITIVE","state","incrementStats","setState","prevState","countTotalFeedback","Object","values","reduce","acc","value","countPositiveFeedbackPercentage","positive","entries","filter","key","includes","Math","round","this","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,WAAa,oCAAoC,WAAa,oCAAoC,aAAe,sCAAsC,KAAO,kEAAkE,QAAU,qEAAqE,IAAM,mE,iBCAvUD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,qBCA7DD,EAAOC,QAAU,CAAC,UAAY,+B,gBCA9BD,EAAOC,QAAU,CAAC,aAAe,qC,sNCWlBC,EARG,YAAyB,IAAbC,EAAY,EAAZA,SAC5B,OAAO,qBAAKC,UAAWC,IAAOC,UAAvB,SAAmCH,KCiB7BI,EAhBC,YAAgC,IAApBC,EAAmB,EAAnBA,MAAOL,EAAY,EAAZA,SACjC,OACE,yBAASC,UAAWC,IAAOI,QAA3B,SACE,eAAC,EAAD,WACE,oBAAIL,UAAWC,IAAOG,MAAtB,SAA8BA,IAC7BL,Q,gBCgBMO,EAvBS,YAAyC,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAC3C,OACE,oBAAIR,UAAWC,IAAOQ,WAAtB,SACGF,EAAQG,KAAI,SAAAC,GAAM,OACjB,oBAAiBX,UAAWC,IAAOW,WAAnC,SACE,wBACEC,KAAK,SACLb,UAAWC,IAAOU,GAClBG,QAAS,kBAAMN,EAAgBG,IAHjC,SAKGA,KANIA,SCsBFI,G,MA1BI,YAMf,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,qCACE,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,2CAAcC,EAAd,Y,iBCLSC,EARM,YAAwB,IAAZC,EAAW,EAAXA,QAC/B,OAAO,mBAAGtB,UAAWC,IAAOsB,aAArB,SAAoCD,KCiE9BE,E,4MA9DbC,cAAgB,CACdT,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPQ,SAAW,CAAC,OAAQ,W,EAEpBC,MAAQ,EAAKF,c,EAEbG,eAAiB,SAAAjB,GACf,EAAKkB,UAAS,SAAAC,GAAS,sBAAQnB,EAASmB,EAAUnB,GAAU,O,EAG9DoB,mBAAqB,WACnB,OAAOC,OAAOC,OAAO,EAAKN,OAAOO,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,M,EAGhEC,gCAAkC,WAChC,IAAMlB,EAAQ,EAAKY,qBACbO,EAAWN,OAAOO,QAAQ,EAAKZ,OAClCa,QAAO,gBAAEC,EAAF,2BAAW,EAAKf,SAASgB,SAASD,MACzCP,QAAO,SAACC,EAAD,UAAoBA,EAApB,sBAAiC,GAE3C,OAAiB,IAAVhB,EAAc,EAAIwB,KAAKC,MAAON,EAAWnB,EAAS,M,4CAG3D,WACE,MAA+B0B,KAAKlB,MAA5BX,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBX,EAAUyB,OAAOc,KAAKD,KAAKlB,OAE3BR,EAAQ0B,KAAKd,qBACbO,EAAWO,KAAKR,kCAEtB,OACE,qCACE,2DAEA,cAAC,EAAD,CAASjC,MAAM,wBAAf,SACE,cAAC,EAAD,CACEG,QAASA,EACTC,gBAAiBqC,KAAKjB,mBAG1B,cAAC,EAAD,CAASxB,MAAM,aAAf,SACGe,EAAQ,EACP,cAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBkB,IAGtB,cAAC,EAAD,CAAchB,QAAQ,+B,GAvDhByB,aCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.83a872f9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"optionList\":\"FeedbackOptions_optionList__1IkPq\",\"optionItem\":\"FeedbackOptions_optionItem__34jHT\",\"optionButton\":\"FeedbackOptions_optionButton__KuIRt\",\"good\":\"FeedbackOptions_good__SQ5EG FeedbackOptions_optionButton__KuIRt\",\"neutral\":\"FeedbackOptions_neutral__1M7Bh FeedbackOptions_optionButton__KuIRt\",\"bad\":\"FeedbackOptions_bad__3zjjv FeedbackOptions_optionButton__KuIRt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3lZfO\",\"title\":\"Section_title__329oP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__8aK8A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__1Mk-Y\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Container.module.css';\n\nconst Container = function ({ children }) {\n  return <div className={styles.container}>{children}</div>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Section.module.css';\n\nimport Container from '../Container/Container';\n\nconst Section = function ({ title, children }) {\n  return (\n    <section className={styles.section}>\n      <Container>\n        <h2 className={styles.title}>{title}</h2>\n        {children}\n      </Container>\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = function ({ options, onLeaveFeedback }) {\n  return (\n    <ul className={styles.optionList}>\n      {options.map(option => (\n        <li key={option} className={styles.optionItem}>\n          <button\n            type=\"button\"\n            className={styles[option]}\n            onClick={() => onLeaveFeedback(option)}\n          >\n            {option}\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Statistics.module.css';\n\nconst Statistics = function ({\n  good,\n  neutral,\n  bad,\n  total,\n  positivePercentage,\n}) {\n  return (\n    <>\n      <p>Good: {good}</p>\n      <p>Neutral: {neutral}</p>\n      <p>Bad: {bad}</p>\n      <p>Total: {total}</p>\n      <p>Positive: {positivePercentage}%</p>\n    </>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Notification.module.css';\n\nconst Notification = function ({ message }) {\n  return <p className={styles.notification}>{message}</p>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { Component } from 'react';\n\nimport Section from './Section/Section';\nimport FeedbackOptions from './FeedbackOptions/FeedbackOptions';\nimport Statistics from './Statistics/Statistics';\nimport Notification from './Notification/Notification';\n\nclass App extends Component {\n  INITIAL_STATE = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  POSITIVE = ['good', 'neutral'];\n\n  state = this.INITIAL_STATE;\n\n  incrementStats = option => {\n    this.setState(prevState => ({ [option]: prevState[option] + 1 }));\n  };\n\n  countTotalFeedback = () => {\n    return Object.values(this.state).reduce((acc, value) => acc + value);\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const total = this.countTotalFeedback();\n    const positive = Object.entries(this.state)\n      .filter(([key]) => this.POSITIVE.includes(key))\n      .reduce((acc, [, value]) => acc + value, 0);\n\n    return total === 0 ? 0 : Math.round((positive / total) * 100);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const options = Object.keys(this.state);\n\n    const total = this.countTotalFeedback();\n    const positive = this.countPositiveFeedbackPercentage();\n\n    return (\n      <>\n        <h1>goit-react-hw-02-feedback</h1>\n\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={options}\n            onLeaveFeedback={this.incrementStats}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {total > 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={positive}\n            />\n          ) : (\n            <Notification message=\"No feedback given\"></Notification>\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}